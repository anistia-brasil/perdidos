library(wordcloud2)
wordcloud2(func_presos, size = 0.2, minSize = 5, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# Leitura dos dados - presos
presos <- read.csv2("data/presos.csv", encoding="UTF-8")
# Organização dos presos por frequência de citação
func_presos <- presos %>%
count(Presos, sort = TRUE)
# Elaboração da figura "nuvem de palavras - presos"
# wordcloud(func_presos$Presos, func_presos$n, random.order=T, rot.per=0.3, scale=c(2.5,.05), max.words=50, colors = brewer.pal(8, "Dark2"))
library(wordcloud2)
wordcloud2(func_presos, size = 0.5, minSize = 20, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
library(wordcloud)
wordcloud(func_presos$Presos, func_presos$n, random.order=T, rot.per=0.3, scale=c(2.5,.05), max.words=50, colors = brewer.pal(8, "Dark2"))
wordcloud(func_presos$Presos, func_presos$n, random.order=T, rot.per=0.3, scale=c(2,.05), max.words=40, colors = brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(2,.05), max.words=50, colors = brewer.pal(8, "Dark2"))
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(2,.02), max.words=50, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_vizinhos, size = 0.2, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# knitr::include_graphics("fig/vizinhos.jpg")
# Leitura dos dados - presos
presos <- read.csv2("data/presos.csv", encoding="UTF-8")
# Organização dos presos por frequência de citação
func_presos <- presos %>%
count(Presos, sort = TRUE)
# Elaboração da figura "nuvem de palavras - presos"
library(wordcloud)
wordcloud(func_presos$Presos, func_presos$n, random.order=T, rot.per=0.3, scale=c(2,.02), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_presos, size = 0.5, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(2,.01), max.words=50, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_vizinhos, size = 0.2, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# knitr::include_graphics("fig/vizinhos.jpg")
# Leitura dos dados - presos
presos <- read.csv2("data/presos.csv", encoding="UTF-8")
# Organização dos presos por frequência de citação
func_presos <- presos %>%
count(Presos, sort = TRUE)
# Elaboração da figura "nuvem de palavras - presos"
library(wordcloud)
wordcloud(func_presos$Presos, func_presos$n, random.order=T, rot.per=0.3, scale=c(2,.1), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_presos, size = 0.5, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# Leitura dos dados - presos
presos <- read.csv2("data/presos.csv", encoding="UTF-8")
# Organização dos presos por frequência de citação
func_presos <- presos %>%
count(Presos, sort = TRUE)
# Elaboração da figura "nuvem de palavras - presos"
library(wordcloud)
wordcloud(func_presos$Presos, func_presos$n, random.order=T, rot.per=0.3, scale=c(2,.01), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_presos, size = 0.5, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(5,.01), max.words=50, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_vizinhos, size = 0.2, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# knitr::include_graphics("fig/vizinhos.jpg")
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(5,.05), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_vizinhos, size = 0.2, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# knitr::include_graphics("fig/vizinhos.jpg")
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(5,.01), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_vizinhos, size = 0.2, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# knitr::include_graphics("fig/vizinhos.jpg")
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(1,.01), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_vizinhos, size = 0.2, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# knitr::include_graphics("fig/vizinhos.jpg")
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(1.5,.01), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_vizinhos, size = 0.2, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# knitr::include_graphics("fig/vizinhos.jpg")
library(wordcloud)
wordcloud(func_vizinhos$Vizinho, func_vizinhos$n, random.order=T, rot.per=0.3, scale=c(2,.01), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_vizinhos, size = 0.2, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
# knitr::include_graphics("fig/vizinhos.jpg")
# Leitura dos dados - presos
presos <- read.csv2("data/presos.csv", encoding="UTF-8")
# Organização dos presos por frequência de citação
func_presos <- presos %>%
count(Presos, sort = TRUE)
# Elaboração da figura "nuvem de palavras - presos"
library(wordcloud)
wordcloud(func_presos$Presos, func_presos$n, random.order=T, rot.per=0.3, scale=c(2,.01), max.words=40, colors = brewer.pal(8, "Dark2"))
# wordcloud2(func_presos, size = 0.5, minSize = 5, gridSize =  0,
#     fontFamily = 'Segoe UI', fontWeight = 'bold',
#     color = 'random-dark', backgroundColor = "white",
#     minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
#     rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
#     widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
tabela_codigo_rede <-read.csv("data/codigo_rede.csv", header = TRUE, encoding="UTF-8")
#str(tabela_codigo_rede)
tab_lista_camponeses <- datatable(tabela_codigo_rede,
caption = 'Tabela A. Lista de camponeses integrantes da rede analisada',
colnames = c('Código', 'Nome'),
extensions = 'Buttons',
elementId = NULL,
#extensions= "Scroller",
style="bootstrap",
class="stripe hover",
width="80%",
rownames = F,
autoHideNavigation = T,
escape =FALSE,
filter = "top",
options=list(deferRender=TRUE,
pageLength = 15,
scrollY=300,
dom = 'Bfrtip',
buttons = c('copy', 'csv', 'excel', 'pdf')))
tab_lista_camponeses
rede <- read.csv2("data/rede-perdidos.csv", header=T)
rede_viz <- graph.data.frame(rede, directed=FALSE)
plot(rede_viz)
rede_viz <- graph.data.frame(rede, directed=FALSE)
rede_viz <- graph_from_data_frame(rede, directed=FALSE)
library(igraph)
rede_viz <- graph.data.frame(rede, directed=FALSE)
plot(rede_viz)
# Alterando aspectos visuais da rede
plot(rede_viz_dir,
edge.arrow.size=0.2,
edge.width=1,
vertex.size=15,
vertex.color="#c3ed3b",
edge.color="gray",
vertex.label.color="black",
vertex.frame.color="gray",
vertex.label.cex=0.4,
#vertex.label.dist=3,
layout=layout_components)
rede_viz_dir <- graph.data.frame(rede, directed=TRUE)
plot(rede_viz_dir)
plot(rede_viz_dir,
edge.arrow.size=0.2,
edge.width=1,
vertex.size=15,
vertex.color="#c3ed3b",
edge.color="gray",
vertex.label.color="black",
vertex.frame.color="gray",
vertex.label.cex=0.4,
#vertex.label.dist=3,
layout=layout_components)
camponeses.localidade <- data.frame(
localidade=c("Perdidos", "Vila Boa Vista", "Piçarra", "Xambioá", "Caianos", "Cigana", "Marcelinense"), camponeses=c(35, 43, 11, 55, 27, 47, 9)
camponeses.localidade <- data.frame(
localidade=c("Perdidos", "Vila Boa Vista", "Piçarra", "Xambioá", "Caianos", "Cigana", "Marcelinense"), camponeses=c(35, 43, 11, 55, 27, 47, 9)
camponeses.localidade <- data.frame(
localidade=c("Perdidos", "Vila Boa Vista", "Piçarra", "Xambioá", "Caianos", "Cigana", "Marcelinense"), camponeses=c(35, 43, 11, 55, 27, 47, 9)
G2 <- ggplot(camponeses.localidade, aes(x = fct_reorder(localidade, camponeses, .desc = F), y = camponeses)) +
geom_bar(stat="identity", fill="#69b3a2") +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none",
) +
xlab("") +
ylab(" ") +
ggtitle("Número de camponeses afetados")
camponeses.localidade <- data.frame(
localidade=c("Perdidos", "Vila Boa Vista", "Piçarra", "Xambioá", "Caianos", "Cigana", "Marcelinense"), camponeses=c(35, 43, 11, 55, 27, 47, 9)
camponeses.localidade <- data.frame(
localidade=c("Perdidos", "Vila Boa Vista", "Piçarra", "Xambioá", "Caianos", "Cigana", "Marcelinense"),
camponeses.localidade <- data.frame(
localidade=c("Perdidos", "Vila Boa Vista", "Picarra", "Xambioa", "Caianos", "Cigana", "Marcelinense"),
camponeses=c(35, 43, 11, 55, 27, 47, 9)
)
G2 <- ggplot(camponeses.localidade, aes(x = fct_reorder(localidade, camponeses, .desc = F), y = camponeses)) +
geom_bar(stat="identity", fill="#69b3a2") +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none",
) +
xlab("") +
ylab(" ") +
ggtitle("Número de camponeses afetados")
G2
G2 <- ggplot(camponeses.localidade, aes(x = fct_reorder(localidade, camponeses, .desc = F), y = camponeses)) +
geom_bar(stat="identity", fill="#69b3a2") +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none",
) +
xlab("") +
ylab(" ") +
ggtitle("Numero de camponeses afetados")
G2
lista_camponesesb <-read.csv2("data/Perdidosb.csv", header = TRUE, encoding = "UTF-8")
View(lista_camponesesb)
Tabela_camponesesb <- datatable(lista_camponesesb,
caption = 'Tabela 3. Principais impactos e prejuízos sofridos pelos camponeses da região decorrentes dos eventos relacionados à Batalha dos Perdidos.',
colnames = c('Nome', 'Localidade', 'Região', 'Vizinhos', 'Citado por', 'Presos que citou', 'Prejuízos', 'Observações'),
lista_camponesesb <-read.csv2("data/Perdidosb.csv", header = TRUE, encoding = "UTF-8")
View(lista_camponesesb)
Tabela_camponesesb <- datatable(lista_camponesesb,
caption = 'Tabela 3. Principais impactos e prejuízos sofridos pelos camponeses da região decorrentes dos eventos relacionados à Batalha dos Perdidos.',
colnames = c('Nome', 'Localidade', 'Região', 'Vizinhos', 'Citado por', 'Presos que citou', 'Prejuízos', 'Observações'),
View(lista_camponesesb)
lista_camponesesb <-read_csv2("data/Perdidosb.csv", header = TRUE, encoding = "UTF-8")
lista_camponesesb <-read_csv2("data/Perdidosb.csv")
View(lista_camponesesb)
lista_camponesesb <-read_csv2("data/Perdidosb.csv")
# , header = TRUE, encoding = "UTF-8")
View(lista_camponesesb)
Tabela_camponesesb <- datatable(lista_camponesesb,
caption = 'Tabela 3. Principais impactos e prejuízos sofridos pelos camponeses da região decorrentes dos eventos relacionados à Batalha dos Perdidos.',
colnames = c('Nome', 'Localidade', 'Região', 'Vizinhos', 'Citado por', 'Presos que citou', 'Prejuízos', 'Observações'),
lista_camponesesa <-read_csv2("data/Perdidosa.csv")
View(lista_camponesesa)
Tabela_camponesesa <- datatable(lista_camponesesa,
caption = 'Tabela 1. Caracterização dos camponeses afetados pelos eventos relacionados à Batalha dos Perdidos.',
colnames = c('Nome', 'Idade', 'Esposa', 'Esposo', 'Pai', 'Mãe', 'Filhos', 'Irmãos', 'Localidade', 'Região'),
localidades <- readOGR("data/localidades1.kml", verbose = FALSE)
#library(summarywidget)
library(rgdal)
localidades <- readOGR("data/localidades1.kml", verbose = FALSE)
localidades <- readOGR("data/localidades1.kml", verbose = FALSE)
mapa <- leaflet() %>%
#Base groups
setView(lng = -58, lat = -14,
zoom = 4) %>%
#addProviderTiles(providers$Esri.WorldImagery, group = "Imagem ESRI") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Stamen Toner Lite") %>%
#addProviderTiles(providers$OpenStreetMap.Mapnik, group = "Open Street Map") %>%
#Overlay groups
# addPolygons(data = areas_importantes,
#             color = "#96390e",
#             weight = 1,
#             group = "Área importante para aves") %>%
#   addPolygons(data = riqueza,
#               color = "#3c39db",
#               weight = 1,
#               group = "Riqueza de aves") %>%
# addPolygons(data = concentracao,
#             color = "#006400",
#             weight = 1,
#             group = "Área de concentração de aves") %>%
#             # popup = paste("Área: ", N_concentracao$Nome, "<br>",
#             #               "UF: ", N_concentracao$estado, "<br>",
#             #               "Descrição: ", N_concentracao$Descricao, "<br>",
#             #               "Fonte(s): ", N_concentracao$Fontes, "<br>")) %>%
addPolygons(data = localidades,
color = "#FF0000",
weight = 1,
group = "Localidades") %>%
# addPolygons(data = ucf_integral,
#             color = "#fc7303",
#             weight = 1,
#             group = "UC federal de uso sustentável",
#             popup = paste("Nome: ", ucf_integral$nome, "<br>",
#                           "Ano de criação: ", ucf_integral$anoCriacao, "<br>",
#                           "Área (ha): ", ucf_integral$areaHa, "<br>",
#                           "UF: ", ucf_integral$UF, "<br>",
#                           "Municípios: ", ucf_integral$municipios, "<br>",
#                           "Bioma: ", ucf_integral$biomaIBGE, "<br>",
#                           "CNUC: ", ucf_integral$codigoCnuc, "<br>")) %>%
# addPolygons(data = ucf_sustentavel,
#             color = "#158c35",
#             weight = 1,
#             group = "UC federal de proteção integral",
#             popup = paste("Nome: ", ucf_sustentavel$nome, "<br>",
#                           "Ano de criação: ", ucf_sustentavel$anoCriacao, "<br>",
#                           "Área (ha): ", ucf_sustentavel$areaHa, "<br>",
#                           "UF: ", ucf_sustentavel$UF, "<br>",
#                           "Municípios: ", ucf_sustentavel$municipios, "<br>",
#                           "Bioma: ", ucf_sustentavel$biomaIBGE, "<br>",
#                           "CNUC: ", ucf_sustentavel$codigoCnuc, "<br>")) %>%
# addPolygons(data = TI_homologadas,
#             color = "#fc7303",
#             weight = 1,
#             group = "Terra indígena homologada",
#             popup = paste("Terra Indígena: ",  TI_homologadas$terrai_nom)) %>%
# addPolygons(data = iba,
#             color = "#73193F",
#             weight = 1,
#             group = "IBA (Important Bird Area") %>%
addCircleMarkers(data = aerogeradores,
color = "#8B4513",
radius = 3,
weight = 1,
group = "Aerogeradores",
popup = paste("Nome: ", aerogeradores$NOME_EOL, "<br>",
"Empresa: ", aerogeradores$PROPRIETAR, "<br>",
"Em operação: ", aerogeradores$OPERACAO, "<br>",
"Altura total (m): ", aerogeradores$ALT_TOTAL, "<br>",
"UF: ", aerogeradores$UF, "<br>")) %>%
# addPolygons(data = grade_aerogeradores,
#            color = "#F4A460",
#            weight = 1,
#            group = "Grade Aerogeradores")  %>%
# Layers Control
addLayersControl(
#baseGroups = c(#"Open Street Map ",
#"Stamen Toner Lite (default)"
#"Imagem ESRI"),
#),
overlayGroups = c(#"Área importante para aves",
# "Riqueza de aves",
# "Área de concentração de aves",
"Ocorrência de espécies de aves ameaçadas",
# "Grade Aerogeradores",
"Aerogeradores"
#"UC federal de uso sustentável",
#"UC federal de proteção integral"
#"Terra indígena homologada",
#"IBA (Important Bird Area)",
#"Empreendimento eólico"
),
options = layersControlOptions(collapsed = TRUE, autoZIndex = TRUE)) %>%
addEasyButton(easyButton(
icon="fa-globe", title="Zoom to Level 4",
onClick=JS("function(btn, map){ map.setZoom(4); }"))) %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479")
localidades <- readOGR("data/localidades1.kml", verbose = FALSE)
localidades <- readOGR("data/localidades1.kml", verbose = FALSE)
mapa <- leaflet() %>%
#Base groups
setView(lng = -58, lat = -14,
zoom = 4) %>%
#addProviderTiles(providers$Esri.WorldImagery, group = "Imagem ESRI") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Stamen Toner Lite") %>%
#addProviderTiles(providers$OpenStreetMap.Mapnik, group = "Open Street Map") %>%
#Overlay groups
# addPolygons(data = areas_importantes,
#             color = "#96390e",
#             weight = 1,
#             group = "Área importante para aves") %>%
#   addPolygons(data = riqueza,
#               color = "#3c39db",
#               weight = 1,
#               group = "Riqueza de aves") %>%
# addPolygons(data = concentracao,
#             color = "#006400",
#             weight = 1,
#             group = "Área de concentração de aves") %>%
#             # popup = paste("Área: ", N_concentracao$Nome, "<br>",
#             #               "UF: ", N_concentracao$estado, "<br>",
#             #               "Descrição: ", N_concentracao$Descricao, "<br>",
#             #               "Fonte(s): ", N_concentracao$Fontes, "<br>")) %>%
# addPolygons(data = localidades,
#                  color = "#FF0000",
#                  weight = 1,
#                  group = "Localidades") %>%
# addPolygons(data = ucf_integral,
#             color = "#fc7303",
#             weight = 1,
#             group = "UC federal de uso sustentável",
#             popup = paste("Nome: ", ucf_integral$nome, "<br>",
#                           "Ano de criação: ", ucf_integral$anoCriacao, "<br>",
#                           "Área (ha): ", ucf_integral$areaHa, "<br>",
#                           "UF: ", ucf_integral$UF, "<br>",
#                           "Municípios: ", ucf_integral$municipios, "<br>",
#                           "Bioma: ", ucf_integral$biomaIBGE, "<br>",
#                           "CNUC: ", ucf_integral$codigoCnuc, "<br>")) %>%
# addPolygons(data = ucf_sustentavel,
#             color = "#158c35",
#             weight = 1,
#             group = "UC federal de proteção integral",
#             popup = paste("Nome: ", ucf_sustentavel$nome, "<br>",
#                           "Ano de criação: ", ucf_sustentavel$anoCriacao, "<br>",
#                           "Área (ha): ", ucf_sustentavel$areaHa, "<br>",
#                           "UF: ", ucf_sustentavel$UF, "<br>",
#                           "Municípios: ", ucf_sustentavel$municipios, "<br>",
#                           "Bioma: ", ucf_sustentavel$biomaIBGE, "<br>",
#                           "CNUC: ", ucf_sustentavel$codigoCnuc, "<br>")) %>%
# addPolygons(data = TI_homologadas,
#             color = "#fc7303",
#             weight = 1,
#             group = "Terra indígena homologada",
#             popup = paste("Terra Indígena: ",  TI_homologadas$terrai_nom)) %>%
# addPolygons(data = iba,
#             color = "#73193F",
#             weight = 1,
#             group = "IBA (Important Bird Area") %>%
addCircleMarkers(data = localidades,
color = "#8B4513",
radius = 3,
weight = 1,
group = "Localidades") %>%
# popup = paste("Nome: ", aerogeradores$NOME_EOL, "<br>",
#           "Empresa: ", aerogeradores$PROPRIETAR, "<br>",
#            "Em operação: ", aerogeradores$OPERACAO, "<br>",
#            "Altura total (m): ", aerogeradores$ALT_TOTAL, "<br>",
#            "UF: ", aerogeradores$UF, "<br>")) %>%
# addPolygons(data = grade_aerogeradores,
#            color = "#F4A460",
#            weight = 1,
#            group = "Grade Aerogeradores")  %>%
# Layers Control
addLayersControl(
#baseGroups = c(#"Open Street Map ",
#"Stamen Toner Lite (default)"
#"Imagem ESRI"),
#),
overlayGroups = c(#"Área importante para aves",
# "Riqueza de aves",
# "Área de concentração de aves",
"Localidades",
# "Grade Aerogeradores",
# "Aerogeradores"
#"UC federal de uso sustentável",
#"UC federal de proteção integral"
#"Terra indígena homologada",
#"IBA (Important Bird Area)",
#"Empreendimento eólico"
),
options = layersControlOptions(collapsed = TRUE, autoZIndex = TRUE)) %>%
addEasyButton(easyButton(
icon="fa-globe", title="Zoom to Level 4",
onClick=JS("function(btn, map){ map.setZoom(4); }"))) %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479")
camponeses.localidade <- data.frame(
localidade=c("Perdidos", "Vila Boa Vista", "Picarra", "Xambioa", "Caianos", "Cigana", "Marcelinense"),
camponeses=c(35, 43, 11, 55, 27, 47, 9)
)
G2 <- ggplot(camponeses.localidade, aes(x = fct_reorder(localidade, camponeses, .desc = F), y = camponeses)) +
geom_bar(stat="identity", fill="#264591") +
coord_flip() +
theme_minimal() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none",
) +
xlab("") +
ylab(" ") +
ggtitle("Camponeses afetados")
G2
knitr::include_graphics("fig/imagem-perdidos1.jpg")
